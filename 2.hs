--    EvemaxFib Fibonacci Numbers
--
--    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
--    By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--    By considering the terms imaxFib the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

--    Note: the demo answer is 44.

fibs :: [Int] -> Int -> Int

fibs fibList maxFib 
    | last fibList > maxFib = sum [ x | x <- init fibList, x `mod` 2 == 0 ]
    | otherwise = fibs biggerList maxFib
    where biggerList = fibList ++ [ sum $ take 2 $ reverse fibList ]

-- answer = fibs [1,2] 4000000 
--answer = fibs [1,2] 100 
answer = fibs [1,2] 10 
