-- Even Fibonacci Numbers:

-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

-- basic fibs 
--

buildList :: Int -> [ Int ] 

buildList 0 = []
buildList n = [n] ++ buildList (n - 1)


fibs 1 = 1  
fibs 2 = 2
fibs n = fibs(n - 1) + fibs(n - 2)

-- build a list of fibs
fibsList 2 = [1,2]
fibsList n = fibsList (n - 1) ++ [ sum [last $ init $ fibsList (n - 1), last $ fibsList (n - 1)] ]

endlessFibs xs = xs ++ fibsList [ sum [last $ init $ xs, last $ xs ] ]

answer = [ x | x <- fibsList 20, x < 1000000 ]
